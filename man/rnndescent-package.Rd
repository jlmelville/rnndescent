% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnndescent-package.R
\docType{package}
\name{rnndescent-package}
\alias{rnndescent}
\alias{rnndescent-package}
\title{rnndescent: Nearest Neighbor Descent Method for Approximate Nearest Neighbors}
\description{
The Nearest Neighbor Descent method (Dong and co-workers, \doi{10.1145/1963405.1963487}) for finding approximate nearest neighbors. This is based heavily on the Python implementation, "PyNNDescent" (\url{https://github.com/lmcinnes/pynndescent}).
}
\details{
The rnndescent package provides functions to create approximate nearest
neighbors using the Nearest Neighbor Descent and Random Partition Tree
methods. In comparison to other packages, it offers more metrics and can be
used with sparse matrices. For querying new data, it uses graph
diversification methods to improve the search performance. The package also
provides functions to diagnose hubness in nearest neighbor results.

General resources:
\itemize{
\item Website for the rnndescent package: \url{https://github.com/jlmelville/rnndescent}
\item Website of the PyNNDescent package: \url{https://github.com/lmcinnes/pynndescent}
}

Resources on specific topics:
\itemize{
\item Create exact nearest neighbors: \code{\link[=brute_force_knn]{brute_force_knn()}}, \code{\link[=brute_force_knn_query]{brute_force_knn_query()}}
\item Create approximate nearest neighbors: \code{\link[=rpf_knn]{rpf_knn()}}, \code{\link[=nnd_knn]{nnd_knn()}}
\item Querying new data: \code{\link[=prepare_search_graph]{prepare_search_graph()}}, \code{\link[=graph_knn_query]{graph_knn_query()}}
\item Diagnostics and hubness: \code{\link[=k_occur]{k_occur()}}
}
}
\references{
Dasgupta, S., & Freund, Y. (2008, May).
Random projection trees and low dimensional manifolds.
In \emph{Proceedings of the fortieth annual ACM symposium on Theory of computing}
(pp. 537-546).
\url{https://doi.org/10.1145/1374376.1374452}.

Radovanovic, M., Nanopoulos, A., & Ivanovic, M. (2010).
Hubs in space: Popular nearest neighbors in high-dimensional data.
\emph{Journal of Machine Learning Research}, \emph{11}, 2487-2531.
\url{https://www.jmlr.org/papers/v11/radovanovic10a.html}

Dong, W., Moses, C., & Li, K. (2011, March).
Efficient k-nearest neighbor graph construction for generic similarity measures.
In \emph{Proceedings of the 20th international conference on World Wide Web}
(pp. 577-586).
ACM.
\url{https://doi.org/10.1145/1963405.1963487}.

Harwood, B., & Drummond, T. (2016).
Fanng: Fast approximate nearest neighbour graphs.
In \emph{Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition}
(pp. 5713-5722).
}
\seealso{
Useful links:
\itemize{
  \item \url{https://jlmelville.github.io/rnndescent/}
}

}
\author{
\strong{Maintainer}: James Melville \email{jlmelville@gmail.com}

Other contributors:
\itemize{
  \item Vitalie Spinu [contributor]
}

}
\keyword{internal}
