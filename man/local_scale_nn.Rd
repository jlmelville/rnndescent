% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hubness.R
\name{local_scale_nn}
\alias{local_scale_nn}
\title{Locally Scaled Nearest Neighbors}
\usage{
local_scale_nn(nn, k = 15, k_scale = 2, n_threads = 0)
}
\arguments{
\item{nn}{Nearest neighbor data in the dense list format. The \code{k} scaled
neighbors are chosen from the candidates provided here, so the size of the
neighborhoods in \code{nn} should be at least \code{k}.}

\item{k}{size of the desired scaled neighborhood.}

\item{k_scale}{neighbor in \code{nn} to use to scale the distances. May be a
single value (between 1 and the size of the neighborhood) or a vector of
two values indicating the inclusive range of neighbors to use. In the latter
case, the average distance to the neighbors in the range will be used to
scale distances.}

\item{n_threads}{number of threads to use for parallel processing. Currently
ignored.}
}
\value{
the scaled \code{k} nearest neighbors in dense list format. The distances
returned are the unscaled distances.
}
\description{
Find a subset of nearest neighbors with the smallest generalized scaled
distance (Zelnik-Manor and Perona, 2004) as a selection criterion. This a
means to reduce the influence of hub points, as suggested by Schnitzer and
co-workers (2012).
}
\details{
Local scaling is carried out by dividing by the distance to the k-th nearest
neighbor, to take into account the difference in local distance statistics of
each neighborhood. This function supports choosing the average distance over
a range of k, as used by Jegou and co-workers (2007). Note that the scaled
distances are used to select k neighbors from a larger list of candidate
neighbors, but the returned neighbor data uses the original unscaled
distances.
}
\examples{
set.seed(42)
# 100 x 10 Gaussian data: exhibits mild hubness
m <- matrix(rnorm(1000), nrow = 100, ncol = 10)

# Find 50 nearest neighbors to give a reasonable set of candidates
nn50 <- brute_force_knn(m, k = 50)

# Using the 15-nearest neighbors, maximum k-occurrence > 15 indicates any
# observations showing up more than expected
nn15_hubness <- max(k_occur(nn50, k = 15))

# Find 15 locally scaled nearest neighbors from the 50 NN
# use average distance to neighbors 5-7 to represent the local distance
# statistics
lnn15 <- local_scale_nn(nn50, k = 15, k_scale = c(5, 7))

lnn15_hubness <- max(k_occur(lnn15))

# hubness has been reduced
lnn15_hubness < nn15_hubness # TRUE

}
\references{
Jegou, H., Harzallah, H., & Schmid, C. (2007, June).
A contextual dissimilarity measure for accurate and efficient image search.
In \emph{2007 IEEE Conference on Computer Vision and Pattern Recognition} (pp. 1-8).
IEEE.

Schnitzer, D., Flexer, A., Schedl, M., & Widmer, G. (2012).
Local and global scaling reduce hubs in space.
\emph{Journal of Machine Learning Research}, \emph{13}(10).

Zelnik-Manor, L., & Perona, P. (2004).
Self-tuning spectral clustering.
In \emph{Advances in neural information processing systems}, \emph{17}.
}
