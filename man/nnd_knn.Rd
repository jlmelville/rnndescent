% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnndescent.R
\name{nnd_knn}
\alias{nnd_knn}
\title{Find Nearest Neighbors and Distances}
\usage{
nnd_knn(data, k, metric = "euclidean", n_iters = 10,
  max_candidates = 50, delta = 0.001, rho = 0.5, use_cpp = TRUE,
  use_set = FALSE, fast_rand = FALSE, n_threads = 0,
  grain_size = 1, verbose = FALSE)
}
\arguments{
\item{data}{Matrix of \code{n} items to search.}

\item{k}{Number of nearest neighbors to return.}

\item{metric}{Type of distance calculation to use. One of \code{"euclidean"},
\code{"l2"} (squared Euclidean), \code{"cosine"}, \code{"manhattan"}
or \code{"hamming"}.}

\item{n_iters}{Number of iterations of nearest neighbor descent to carry out.}

\item{max_candidates}{Maximum number of candidate neighbors to try for each
item.}

\item{delta}{precision parameter. Routine will terminate early if
fewer than \eqn{\delta k N}{delta x k x n} updates are made to the nearest
neighbor list in a given iteration.}

\item{rho}{Sample rate. This fraction of possible items will be used in the
local join stage.}

\item{use_cpp}{If \code{TRUE}, use the faster C++ code path.}

\item{use_set}{If \code{TRUE}, cache pair lookups in a set. This increases
speed at the cost of a memory use. Applies only if \code{use_cpp = TRUE}.}

\item{fast_rand}{If \code{TRUE}, use a faster random number generator than
the R PRNG. Probably acceptable for the needs of the NN descent algorithm.
Applies only if \code{use_cpp = TRUE}.}

\item{n_threads}{Number of threads to use.}

\item{grain_size}{Minimum batch size for multithreading. If the number of
items to process in a thread falls below this number, then no threads will
be used. Ignored if \code{n_threads < 1}.}

\item{verbose}{If \code{TRUE}, log information to the console.}
}
\value{
a list containing:
\itemize{
  \item \code{idx} an n by k matrix containing the nearest neighbor indices.
  \item \code{dist} an n by k matrix containing the nearest neighbor
   distances.
}
}
\description{
Find Nearest Neighbors and Distances
}
