% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnndescent.R
\name{nn_descent}
\alias{nn_descent}
\title{Nearest Neighbor Descent}
\arguments{
\item{data}{Matrix of \code{n} items to search.}

\item{idx}{an n by k matrix containing the initial nearest neighbor indices,
where n is the number of items in \code{data} and k is the number of
neighbors.}

\item{dist}{an n by k matrix containing the initial nearest neighbor
distances, where n is the number of items in \code{data} and k is the
number of neighbors.}

\item{metric}{Type of distance calculation to use. One of \code{"euclidean"},
\code{"cosine"}, \code{"manhattan"} or \code{"hamming"}.}

\item{n_iters}{Number of iterations of nearest neighbor descent to carry out.}

\item{max_candidates}{Maximum number of candidate neighbors to try for each
item.}

\item{delta}{precision parameter. Routine will terminate early if
fewer than \eqn{\delta k N}{delta x k x n} updates are made to the nearest
neighbor list in a given iteration.}

\item{rho}{Sample rate. This fraction of possible items will be used in the
local join stage}

\item{verbose}{If \code{TRUE}, log information to the console.}
}
\value{
a list containing:
\itemize{
  \item \code{idx} an n by k matrix containing the improved nearest neighbor
   indices.
  \item \code{dist} an n by k matrix containing the improved nearest neighbor
   distances.
}
}
\description{
This function uses the nearest neighbor descent method to improve
approximate nearest neighbor data.
}
